# For more information see: https://docs.docker.com/build/ci/github-actions/multi-platform/

name: ci

on:
  push:
    # branches: [ "master" ]
    tags:
      - "v*.*"

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/store-client

jobs:
  Build-App:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.20.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install Packages
      run: npm install

    - name: Build Typescript Aapp
      run: npm run build
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: Bundle
        path: |
          dist
          Dockerfile2
          package.json

  Container-Build-And-Push:
    runs-on: ubuntu-latest
    needs: Build-App
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}

      - # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
        name: Set UP QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set UP Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login To Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Display Structure of Downloaded Files
        run: ls -R

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: Bundle
      
      - name: Docker Build And Push
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile2
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Push To Stable Tag
        if: (github.event_name == 'push' && contains(github.ref, '/tags/v'))
        run: |
          echo ${{ env.IMAGE_NAME }}:${{env.DOCKER_METADATA_OUTPUT_VERSION}}
          docker buildx imagetools create \
            --tag ${{ env.IMAGE_NAME }}:stable \
            ${{ env.IMAGE_NAME }}:${{env.DOCKER_METADATA_OUTPUT_VERSION}}
      
      # - name: Inspect
      #   run: |
      #     docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:${{env.DOCKER_METADATA_OUTPUT_VERSION}} --format '{{json .}}'.