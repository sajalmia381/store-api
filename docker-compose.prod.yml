version: '3'
services:
  node-app:
    image: storerestapi/store-api:latest
    container_name: store-api
    restart: always
    environment:
      - APP_PORT=8000
      - APP_HOST=localhost
      - DB_URL=mongodb://root:hello123@database:27017/store-api?authSource=admin
      - DEBUG_MODE=false
      - NODE_ENV=development
      - SECRET_KEY=!rad9TN`&B{!pg&Y($oTwOhYfEJ4{0sEBYtu]xqa2^8,Iyc^8HP[[XB,J$O)~BL
      - REFRESH_KEY=hOS1|4NM.P#F^BA]JiIX^B0AS@JY+E20Zphjs2ER[}FMJXq3}1vH~iGrQPqtycv
    expose:
      - 8000
    depends_on:
      - database
    networks:
      - store-network
    command: ["node", "src/app.js"]
  database:
    container_name: store-mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: hello123
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-db:/data/db
    networks:
      - store-network
  webserver:
    build: storerestapi/store-client:latest
    container_name: store-webserver
    ports:
      - "80:3000"
      - "443:443"
      - "8000:8000"
    restart: always
    depends_on:
      - database
      - node-app
    volumes:
      - web-root:/usr/share/nginx/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    networks:
      - store-network
    command: ["nginx", "-g", "daemon off;"]
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/usr/share/nginx/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/usr/share/nginx/html --email storerestapi@gmail.com --agree-tos --no-eff-email --staging -d test.storerestapi.com
volumes:
  mongo-db:
  certbot-etc:
  certbot-var:
networks:
  store-network:
    driver: bridge