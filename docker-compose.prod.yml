version: '3'
services:
  node-app:
    image: storerestapi/store-api:latest
    container_name: store-api
    restart: always
    environment:
      - APP_PORT=8000
      - APP_HOST=localhost
      - DB_URL=mongodb://<USERNAME>:hello123@database:27017/store-api?authSource=admin
      - DEBUG_MODE=false
      - NODE_ENV=development
      - SECRET_KEY=ipfhUCFRZ4fce7GWaatUZMQbQ655sygRq0KUATOUX4VB1RFjaUtl6lfKmlP4AHg8
      - REFRESH_KEY=ipfhUCFRZ4fce7GWaatUZMQbQ655sygRq0KUATOUX4VB1RFjaUtl6lfKmlP4AHg8
    expose:
      - 8000
    depends_on:
      - database
    networks:
      - store-network
    command: ["node", "src/app.js"]
  database:
    container_name: store-mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: <USERNAME>
      MONGO_INITDB_ROOT_PASSWORD: hello123
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-db:/data/db
    networks:
      - store-network
  webserver:
    image: storerestapi/store-client:latest
    container_name: store-webserver
    ports:
      - "80:3000"
      - "443:443"
      - "8000:8000"
    restart: always
    depends_on:
      - database
      - node-app
    volumes:
      - web-<USERNAME>:/usr/share/nginx/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    networks:
      - store-network
    command: ["nginx", "-g", "daemon off;"]
  certbot:
    image: certbot/certbot
    container_name: store-certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-<USERNAME>:/var/www/html
    depends_on:
      - webserver
    networks:
      - store-network
    command: certonly --web<USERNAME> --web<USERNAME>-path /usr/share/nginx/html --email storerestapi@gmail.com --agree-tos --no-eff-email --staging -d storerestapi.com
volumes:
  mongo-db:
  certbot-etc:
  certbot-var:
  web<USERNAME>:
networks:
  store-network:
    driver: bridge